// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.48.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'package:meta/meta.dart';

class FlutterRustBridgeExampleBenchmarkSuitePlatform
    extends FlutterRustBridgeBase<FlutterRustBridgeExampleBenchmarkSuiteWire> with FlutterRustBridgeSetupMixin {
  FlutterRustBridgeExampleBenchmarkSuitePlatform(FutureOr<WasmModule> dylib)
      : super(FlutterRustBridgeExampleBenchmarkSuiteWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;
// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<String> api2wire_StringList(List<String> raw) {
    return raw;
  }

  @protected
  Uint8List api2wire_Uuids(List<UuidValue> raw) {
    return api2wire_uint_8_list(api2wireConcatenateBytes(raw));
  }

  @protected
  Object api2wire_i64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  Object api2wire_u64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
}

// Section: WASM wire module

@JS('wasm_bindgen')
external FlutterRustBridgeExampleBenchmarkSuiteWasmModule get wasmModule;

@JS()
@anonymous
class FlutterRustBridgeExampleBenchmarkSuiteWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external FlutterRustBridgeExampleBenchmarkSuiteWasmModule bind(dynamic thisArg, String moduleName);
  external void wire_rust_metrics(NativePortType port_);

  external void wire_handle_uuids(NativePortType port_, Uint8List ids);

  external void wire_handle_uuids_convert_to_strings(NativePortType port_, Uint8List ids);

  external void wire_handle_strings(NativePortType port_, List<String> strings);

  external void wire_handle_bool(NativePortType port_, bool input);

  external void wire_handle_u32(NativePortType port_, int input);

  external void wire_handle_u64(NativePortType port_, Object input);

  external void wire_handle_i8(NativePortType port_, int input);

  external void wire_handle_i16(NativePortType port_, int input);

  external void wire_handle_i32(NativePortType port_, int input);

  external void wire_handle_i64(NativePortType port_, Object input);

  external void wire_handle_f32(NativePortType port_, double input);

  external void wire_handle_f64(NativePortType port_, double input);

  external void wire_handle_string(NativePortType port_, String input);

  external dynamic /* bool */ wire_handle_sync_bool(bool input);

  external dynamic /* int */ wire_handle_sync_u32(int input);

  external dynamic /* Object */ wire_handle_sync_u64(Object input);

  external dynamic /* int */ wire_handle_sync_i8(int input);

  external dynamic /* int */ wire_handle_sync_i16(int input);

  external dynamic /* int */ wire_handle_sync_i32(int input);

  external dynamic /* Object */ wire_handle_sync_i64(Object input);

  external dynamic /* double */ wire_handle_sync_f32(double input);

  external dynamic /* double */ wire_handle_sync_f64(double input);

  external dynamic /* String */ wire_handle_sync_string(String input);
}

// Section: WASM wire connector

class FlutterRustBridgeExampleBenchmarkSuiteWire
    extends FlutterRustBridgeWasmWireBase<FlutterRustBridgeExampleBenchmarkSuiteWasmModule> {
  FlutterRustBridgeExampleBenchmarkSuiteWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<FlutterRustBridgeExampleBenchmarkSuiteWasmModule>(module));

  void wire_rust_metrics(NativePortType port_) => wasmModule.wire_rust_metrics(port_);

  void wire_handle_uuids(NativePortType port_, Uint8List ids) => wasmModule.wire_handle_uuids(port_, ids);

  void wire_handle_uuids_convert_to_strings(NativePortType port_, Uint8List ids) =>
      wasmModule.wire_handle_uuids_convert_to_strings(port_, ids);

  void wire_handle_strings(NativePortType port_, List<String> strings) =>
      wasmModule.wire_handle_strings(port_, strings);

  void wire_handle_bool(NativePortType port_, bool input) => wasmModule.wire_handle_bool(port_, input);

  void wire_handle_u32(NativePortType port_, int input) => wasmModule.wire_handle_u32(port_, input);

  void wire_handle_u64(NativePortType port_, Object input) => wasmModule.wire_handle_u64(port_, input);

  void wire_handle_i8(NativePortType port_, int input) => wasmModule.wire_handle_i8(port_, input);

  void wire_handle_i16(NativePortType port_, int input) => wasmModule.wire_handle_i16(port_, input);

  void wire_handle_i32(NativePortType port_, int input) => wasmModule.wire_handle_i32(port_, input);

  void wire_handle_i64(NativePortType port_, Object input) => wasmModule.wire_handle_i64(port_, input);

  void wire_handle_f32(NativePortType port_, double input) => wasmModule.wire_handle_f32(port_, input);

  void wire_handle_f64(NativePortType port_, double input) => wasmModule.wire_handle_f64(port_, input);

  void wire_handle_string(NativePortType port_, String input) => wasmModule.wire_handle_string(port_, input);

  dynamic /* bool */ wire_handle_sync_bool(bool input) => wasmModule.wire_handle_sync_bool(input);

  dynamic /* int */ wire_handle_sync_u32(int input) => wasmModule.wire_handle_sync_u32(input);

  dynamic /* Object */ wire_handle_sync_u64(Object input) => wasmModule.wire_handle_sync_u64(input);

  dynamic /* int */ wire_handle_sync_i8(int input) => wasmModule.wire_handle_sync_i8(input);

  dynamic /* int */ wire_handle_sync_i16(int input) => wasmModule.wire_handle_sync_i16(input);

  dynamic /* int */ wire_handle_sync_i32(int input) => wasmModule.wire_handle_sync_i32(input);

  dynamic /* Object */ wire_handle_sync_i64(Object input) => wasmModule.wire_handle_sync_i64(input);

  dynamic /* double */ wire_handle_sync_f32(double input) => wasmModule.wire_handle_sync_f32(input);

  dynamic /* double */ wire_handle_sync_f64(double input) => wasmModule.wire_handle_sync_f64(input);

  dynamic /* String */ wire_handle_sync_string(String input) => wasmModule.wire_handle_sync_string(input);
}
